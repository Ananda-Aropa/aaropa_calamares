name: Generate .deb (ceres)

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set env
        run: |
          echo "GITHUB_ARTIFACT_VERSION=$(head -1 ci/debian/changelog | grep -Eo '[0-9]+(\.[0-9]+){2,}-[0-9]+')" >>"$GITHUB_ENV"
          echo "GITHUB_ARTIFACT_ARCH=$(dpkg --print-architecture)" >>"$GITHUB_ENV"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        run: |
          docker buildx create --use --name devuan-dev --buildkitd-flags '--allow-insecure-entitlement security.insecure'
          docker buildx build --builder devuan-dev -f ci/debian/ceres.dockerfile -t devuan --allow security.insecure --output type=tar,dest=install.tar .

      - name: Extract .deb
        run: |
          # Export it to install
          mkdir install
          sudo tar -C install -psxf install.tar

          # Move content out
          mv install/*.{deb,buildinfo,changes} ./

          # Clean up
          sudo rm -rf install install.tar

      - name: Set Vars
        id: vars
        run: |
          echo "arch=$(dpkg --print-architecture)" >> "$GITHUB_OUTPUT"

      - name: Upload miscs
        uses: actions/upload-artifact@v4
        with:
          name: buildinfo+changes
          path: |
            blissos-calamares_${{ env.GITHUB_ARTIFACT_VERSION }}_${{ env.GITHUB_ARTIFACT_ARCH }}.buildinfo
            blissos-calamares_${{ env.GITHUB_ARTIFACT_VERSION }}_${{ env.GITHUB_ARTIFACT_ARCH }}.changes

      - name: Upload deb
        uses: actions/upload-artifact@v4
        with:
          name: blissos-calamares_${{ env.GITHUB_ARTIFACT_VERSION }}_${{ env.GITHUB_ARTIFACT_ARCH }}.deb
          path: blissos-calamares_${{ env.GITHUB_ARTIFACT_VERSION }}_${{ env.GITHUB_ARTIFACT_ARCH }}.deb

      - name: Upload dbgsym
        uses: actions/upload-artifact@v4
        with:
          name: blissos-calamares-dbgsym_${{ env.GITHUB_ARTIFACT_VERSION }}_${{ env.GITHUB_ARTIFACT_ARCH }}.deb
          path: blissos-calamares-dbgsym_${{ env.GITHUB_ARTIFACT_VERSION }}_${{ env.GITHUB_ARTIFACT_ARCH }}.deb


  release:
    name: Release
    needs: build
    if: ((github.event_name == 'push' || github.event_name == 'workflow_dispatch') && startsWith(github.ref, 'refs/tags/'))
    runs-on: ubuntu-latest
    steps:
      - name: Download blissos-calamares
        id: download-blissos-calamares
        uses: actions/download-artifact@v4
        with:
          path: out
          pattern: "*"
          merge-multiple: true

      - name: List Files
        run: ls -R ${{ steps.download-blissos-calamares.outputs.download-path }}

      - uses: "softprops/action-gh-release@v2.1.0"
        with:
          token: "${{ secrets.RELEASE_TOKEN }}"
          prerelease: false
          files: |
            ${{ steps.download-blissos-calamares.outputs.download-path }}/*
